chap 2.4.4 舍入
  IEEE 定义了四种不同的舍入方式，向偶数舍入，向零舍入，向下舍入，向上舍入。
  向偶数舍入将最后一位向最近的偶数舍入，可以适用于二进制小数，将最低位为 0 的值认为是偶数，值 1 认为是奇数。
  
chap 2.4.5 浮点运算
  浮点单元设计避免了进行精确的计算值后舍入到合适精度。
  浮点数加法是不可结合的，因为某些值会因为舍入被丢弃。因此编译器会倾向于保守，不对一些浮点数运算进行优化。
  浮点数加法有单调性，如果 a >= b， x + a >= x + b 都成立除了 x 是 NaN。浮点数的乘法性质和加法类似。
  
chap 2.4.6 C 语言中的浮点数
  所有 C 语言提供 float 和 double 两种浮点数类型，精度和舍入方式相同，而因为 C 语言标准没有规定使用 IEEE 标准，因此 +-0， NaN 之类的特殊值定义可能随机器不同。
  一些转换：
    1. int 转换为 float 时，数字不会溢出，可能被舍入。
    2. int 或 float 转换为 double 时可以保留精确数值。
    3. double 转换为 float，可能会溢出成 float 的正负无穷大，还可能被舍入。
    4. float 或 double 转换到 int 时，值会向零舍入。还可能溢出成一个特殊值。
