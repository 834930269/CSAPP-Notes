chap 3.5.2 一元和二元操作
  一元操作只有一个操作数，既是源又是目的。
  二元操作中第一个操作数是源，第二个操作数既是源又是目的。
  
chap 3.5.3 移位操作
  移位操作先给移位量，再给移位的数。
  移位量可以使立即数和 %cl 寄存器中的值，根据移位指令的大小指示会取 %cl 中对应的低位的值。
  
chap 3.5.4 讨论
  大部分指令除了右移指令之外既支持有符号数也支持无符号数。补码形式有符号数和无符号数位级表现相同，因此补码是比较好的实现有符号数运算的形式。
  
chap 3.5.5 特殊的算数操作
  x86-64 对 128 位数提供了有限的支持。例如 imulq 和 idivq 可以通过操作数的不同表示为普通的 64 位乘除法和结果/被除数为 128 位的乘除法。
  当指令只有一个操作数时，imulq 会默认取 %rax 中的值作为一个操作数，并将 128 位的结果分别存放在 %rdx 和 %rax 中。
  idivq 会将 %rdx 和 %rax 中的数作为被除数，商存在 %rax，余数存在 %rdx。
