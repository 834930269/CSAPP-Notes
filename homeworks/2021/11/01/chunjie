chap 3.2.2 代码示例
  反汇编器可以根据机器代码产生相应的汇编代码。
  x86-64的指令长度从 1 到 15 字节不等，常用和操作数少需要的字节数就少。
  指令被设计为可以从某个位置开始唯一解析。
  调用链接器会补上 call 指令需要的地址。
  nop 指令用来使函数代码大小是 16x(？)。

chap 3.3 数据格式
  w(word，字) 表示 16 位，l(long word，双字) 表示 32 位, q(quad word，四字) 表示 64 位。
  l 也用来表示 8 字节 64 位双精度浮点数，因为浮点数使用完全不同的指令和寄存器所以不会出现歧义。
  
chap 3.4 访问信息
  一个 x86-64 cpu 包含一直 16 个 64 位处理器。
  所有寄存器都可以从低位开始作为字节、字(16 位)、双字（32 位）、四字（64 位）来访问。
  以寄存器作为目标时，1 字节和 2 字节数会保持其他数位不变，4 字节的数会将高位 4 位置 0。
  %rsp 寄存器用来指明运行时栈的结束位置，其余的寄存器用法比较灵活。
